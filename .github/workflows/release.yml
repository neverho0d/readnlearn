name: Release

on:
    push:
        tags:
            - "v*"

permissions:
    contents: write

jobs:
    build-and-release:
        name: Build & Publish Release
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                include:
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: windows
                    - os: macos-latest
                      platform: macos

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: npm
                  cache-dependency-path: package.json

            - name: Install dependencies
              run: npm ci

            - name: Install Linux system dependencies
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    libwebkit2gtk-4.1-dev \
                    libgtk-3-dev \
                    libglib2.0-dev \
                    pkg-config \
                    build-essential \
                    libssl-dev \
                    libayatana-appindicator3-dev \
                    librsvg2-dev

            - name: Build (Tauri Action)
              id: tauri
              uses: tauri-apps/tauri-action@v0
              with:
                  args: --bundles all
              env:
                  TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
                  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

            - name: Gather artifacts
              id: gather
              shell: bash
              run: |
                  set -euo pipefail
                  ROOT="${{ github.workspace }}/src-tauri/target"
                  FILELIST=$(mktemp)
                  find "$ROOT" -type f \( -path '*/bundle/*' \) \
                    \( -name '*.dmg' -o -name '*.app.tar.gz' -o -name '*.app' \
                       -name '*AppImage' -o -name '*.deb' -o -name '*.rpm' \
                       -o -name '*.msi' -o -name '*.exe' -o -name '*.zip' \) \
                    2>/dev/null | sort > "$FILELIST" || true
                  {
                    echo "paths<<EOF"
                    cat "$FILELIST"
                    echo "EOF"
                  } >> "$GITHUB_OUTPUT"

            - name: Upload release assets
              uses: softprops/action-gh-release@v2
              with:
                  files: ${{ steps.gather.outputs.paths }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
